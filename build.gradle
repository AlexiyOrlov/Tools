plugins {
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id("io.github.gradle-nexus.publish-plugin") version "1.1.0"
    id 'java-library'
    id 'maven-publish'
    id 'maven'
}
apply plugin: 'signing'

group ='dev.buildtool'
archivesBaseName = 'tools'
version("0.1.1")

sourceCompatibility=JavaVersion.VERSION_11
targetCompatibility=JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.openjfx:javafx-controls:11.0.2')
}

javafx{
    version("11.0.2")
    modules = ['javafx.controls']
}
task('sourceJar', type: Jar){
    classifier('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier('javadoc')
    from javadoc
}

//redundant?
artifacts {
    archives(javadocJar, sourceJar)
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

publishing {
    publications{
        javaPubl(MavenPublication){
            from components.java
            artifact sourceJar
            artifact javadocJar
            artifactId 'tools' //correct
            pom {
                name= "Alexey Orlov"
                description="Various helpful things"
                url = "https://github.com/AlexiyOrlov/Tools"
                licenses{
                    license{
                        name ="Apache license 2.0"
                        url="https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers{
                    developer{
                        name="Alexey Orlov"
                        email="alexiy.ov@gmail.com"
                    }
                }
                scm{
                    connection ="scm:git:http://github.com/AlexiyOrlov/Tools"
                    developerConnection ="scm:git:https://github.com/AlexiyOrlov/Tools"
                    url= "https://github.com/AlexiyOrlov/Tools"
                }
            }
        }
    }
}

signing {
    sign publishing.publications.javaPubl
}


nexusPublishing {
    repositories {
        sonatype{
            username=project.property("user")
            password=project.property("password")
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(
                    url: "${nexusUrl}/content/repositories/releases") {
                authentication(userName: "$user", password: "$password")
            }
            snapshotRepository(
                    url: "${nexusUrl}/content/repositories/snapshots") {
                authentication(userName: "$user", password: "$password")
            }
        }
    }
}